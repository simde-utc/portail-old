options:
  collate: utf8_unicode_ci
  charset: utf8

Asso:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    name: { type: string(50), notnull: true }
    login: { type: string(32), notnull: true }
    pole_id: { type: integer }
    type_id: { type: integer }
    summary: { type: string(150) }
    description: { type: string }
    logo: { type: string(100) }
    active: { type: boolean, notnull: true, default: true }
    passation: { type: boolean, notnull: true, default: false }
    salle: { type: string(6) }
    phone: { type: string(15) }
    facebook: { type: string(100) }
    joignable: { type: boolean, notnull: true, default: true }
  relations:
    Pole: { local: pole_id, foreign: id }
    Type: { local: type_id, foreign: id, class: TypeAsso }

Pole:
  connection: doctrine
  columns:
    asso_id: { type: integer }
    couleur: { type: string(7) }
  relations:
    Infos: { local: asso_id, foreign: id, class: Asso, foreignAlias: PoleInfos, foreignType: one }
    
TypeAsso:
  connection: doctrine
  columns:
    name: { type: string(50) }
    
AssoMember:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    user_id: { type: integer, notnull: true }
    asso_id: { type: integer, notnull: true }
    role_id: { type: integer, notnull: true }
    semestre_id: { type: integer, notnull: true }
  relations:
    Asso: { local: asso_id, foreign: id }
    Role: { local: role_id, foreign: id }
    User: { local: user_id, foreign: id, class: sfGuardUser }
    Semestre: { local: semestre_id, foreign: id }
    
Role:
  connection: doctrine
  columns:
    name: { type: string(50) }
    sort: { type: integer(4) }
    bureau: { type: boolean, default: false, notnull: true }
    droits: { type: integer, default: 0, notnull: true }
 
Profile:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    user_id: { type: integer }
    domain: { type: string(15) }
    nickname: { type: string(50) }
    birthday: { type: date }
    sexe: { type: char(1) }
    mobile: { type: string(15) }
    home_place: { type: integer }
    family_place: { type: integer }
    branche_id: { type: integer }
    filiere_id: { type: integer }
    semestre: { type: integer }
    other_email: { type: string }
    photo: { type: string }
    weekmail: { type: boolean }
    autorisation_photo: { type: boolean }
    devise: { type: string(255) }

  relations:
    User: { local: user_id, foreign: id, class: sfGuardUser, foreignType: one }
    HomePlace: { local: home_place, foreign: id, class: Place }
    FamilyPlace: { local: family_place, foreign: id, class: Place }
    Branche: { local: branche_id, foreign: id }
    Filiere: { local: filiere_id, foreign: id }
    UserSemestre: { local: semestre, foreign: id }

UserSemestre:
  connection: doctrine
  columns:
    user_id: { type: integer }
    branche_id: { type: integer }
    num: { type: string(4) }
    abroad: { type: string(30) }
    semestre_id: {type: integer }
  relations:
    Profile: { local: user_id, foreign: id }
    Branche: { local: branche_id, foreign: id }
    Semestre: { local: semestre_id, foreign: id }

UserUv:
  connection: doctrine
  columns:
    uv_id: { type: integer }
    user_semestre_id: { type: integer }
    note: { type: string(2) }
  relations:
    Uv: { local: uv_id, foreign: id }
    UserSemestre: { local: user_semestre_id, foreign: id }

UserSport:
  connection: doctrine
  columns:
    user_id: { type: integer }
    sport_id: { type: integer }
  relations:
    Profile: { local: user_id, foreign: id }
    Sport: { local: sport_id, foreign: id }

Sport:
  connection: doctrine
  columns:
    name: { type: string(30), notnull: true }

Uv:
  connection: doctrine
  columns:
    code: { type: string(4), unique:true}
    name: { type: string(100) }

Place:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    street: { type: string }
    zipcode: { type: string(10) }
    city: { type: string(100) }
    country: { type: string(100) }
    phone: { type: string(15) }

Event:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    asso_id : { type: integer, notnull: true }
    type_id: { type: integer, notnull: true }
    name: { type: string(50), notnull: true }
    description: { type: string, notnull: true }
    start_date: { type: timestamp, notnull: true }
    end_date: { type: timestamp, notnull: true }
    is_public: { type: boolean, default: true }
    is_weekmail: { type: boolean, default: false }
    place: { type: string }
    affiche: { type: string }
    summary: { type: string(150) }
  relations:
    Asso: { local: asso_id, foreign: id }
    Type: { local: type_id, foreign: id, class: EventType }
    
EventType:
  connection: doctrine
  columns:
    name: { type: string(50) }
    
Article:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    asso_id: { type: integer, notnull: true }
    name : { type: string(200), notnull: true }
    text : { type: string, notnull: true }
    is_weekmail: { type: boolean, default: false }
    image: { type: string }
    summary: { type: string(150) }
  relations:
    Asso: { local: asso_id, foreign: id }

Semestre:
  connection: doctrine
  columns:
    name: { type: string(3) }
    
Branche:
  connection: doctrine
  columns:
    name: { type: string(3) }
    
Filiere:
  connection: doctrine
  columns:
    name: { type: string(10) }

Activation:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    user_id: { type: integer }
    activation_key: { type: string }
  relations:
    sfGuardUser: { onUpdate: CASCADE, local: user_id, foreign: id, foreignAlias: Activations}

Abonnement:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    user_id: { type: integer, notnull: true }
    asso_id: { type: integer }
    type_publication: { type: integer, notnull: true }
  relations:
    Asso: { local: asso_id, foreign: id }
    User: { local: user_id, foreign: id, class: sfGuardUser }

Service:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    nom: { type: string(100), notnull: true }
    resume: { type: string(150), notnull: true }
    logo: { type: string(255) }
    url: { type: string(255), notnull: true }
    type_id: { type: integer, notnull: true }
  relations:
    Type: { local: type_id, foreign: id, class: ServiceType }

MembreService:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    membre: { type: integer, notnull: true }
    service: { type: integer, notnull: true }
  relations:
    User: { local: membre, foreign: id, class: sfGuardUser }
    Service: { local: service, foreign: id }

ServiceType:
  connection: doctrine
  columns:
    name: { type: string(50) }

CharteInfo:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    date: { type: timestamp, notnull: true }
    ip: { type: string(15), notnull: true }
    semestre_id: { type: integer, notnull: true }
    asso_id : { type: integer, notnull : true }
    asso_name: { type: string(20), notnull: true }
    responsable_id: { type: integer, notnull: true }
    login: { type: string(20), notnull: true }
    confirmation: { type: boolean, notnull: true, default: false }
  relations:
    Semestre: { onUpdate: CASCADE, local: semestre_id, foreign: id }
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }
    Responsable: { onUpdate: CASCADE, local: responsable_id, foreign: id, class: sfGuardUser }

Materiel:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    nom: { type: string(100) }
    asso_id : { type: integer }
    description: { type: string }
  relations:
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }

Etat:
  connection: doctrine
  columns:
    nom: { type: string(100) }
    disponible: { type: boolean }

Stock:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    materiel_id: { type: integer }
    etat_id: { type: integer, notnull: true, default: 1 }
    nombre: { type: integer }
  relations:
    Materiel: { onDelete: CASCADE, onUpdate: CASCADE, local: materiel_id, foreign: id }
    Etat: { onDelete: CASCADE, onUpdate: CASCADE, local: etat_id, foreign: id }

Emprunt:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    materiel_id: { type: integer }
    user_id: { type: integer }
    asso_id: { type: integer }
    nombre: { type: integer }
    recu: { type: boolean }
    rendu: { type: boolean }
  relations:
    Materiel: { onDelete: CASCADE, onUpdate: CASCADE, local: materiel_id, foreign: id }
    User: { onDelete: CASCADE, onUpdate: CASCADE, local: user_id, foreign: id, class: sfGuardUser}
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }

Departement:
  actAs: { Timestampable: ~ }
  connection: doctrine
  columns:
    num: { type: integer(2), notnull: true }
    name: { type: string(50), notnull: true }

AnnoncesCategorie:
  connection: doctrine
  columns:
    name: { type: string(100) , notnull: true }

Annonce:
  actAs: { Timestampable: ~ }
  connection: doctrine
  columns:
    categorie_id: { type: integer, notnull: true }
    titre: { type: string(250), notnull: true }
    texte: { type: string, notnull: true }
    offre: { type: boolean, notnull: true, default: 1 }
    lieu: { type: string(100) }
    prix: { type: float, notnull: true, default: 0.00 }
    user_id: { type: integer }
    email: { type: string(100) }
    password: { type: string(32) }
  relations:
    Categorie: { onUpdate: CASCADE, local: categorie_id, foreign: id, class: AnnoncesCategorie }
    User: { onUpdate: CASCADE, local: user_id, foreign: id, class: sfGuardUser }

Partenaire:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    nom: { type: string(100) }
    logo: { type: string(100) }
    url: { type: string(255) }
    description: { type: string }

VoteListe:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    nom: { type: string(100), notnull: true }
    description: { type: string, notnull: true }
    membres: { type: string, notnull: true }
    semestre_id: { type: integer, notnull: true }
    count: { type: integer, notnull: true, default: 0 }
  relations:
    Semestre: { local: semestre_id, foreign: id }

Vote:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    ip: { type: string(15), notnull: true }
    semestre_id: { type: integer, notnull: true }
    user_id: { type: integer, notnull: true }
    login: { type: string(20), notnull: true }
  relations:
    Semestre: { onUpdate: CASCADE, local: semestre_id, foreign: id }
    User: { onUpdate: CASCADE, local: user_id, foreign: id, class: sfGuardUser }

# Système de trésorerie

Budget:
  connection: doctrine
  actAs:
    Timestampable: ~
    SoftDelete: ~
  columns:
    asso_id: { type: integer, notnull: true }
    nom: { type: string(255), notnull: true }
    semestre_id: { type: integer, notnull: true }
  relations:
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }
    Semestre : { onUpdate: CASCADE, local: semestre_id, foreign: id }

BudgetPoste:
  connection: doctrine
  actAs: { Timestampable: ~, SoftDelete: ~ }
  columns:
    asso_id: { type: integer, notnull: true }
    nom: { type: string(255), notnull: true }
    budget_categorie_id: { type: integer, notnull: true }
    nombre: { type: integer, notnull: true, default: 1 }
    prix_unitaire: { type: decimal(8), scale: 2, notnull: true, default: 0 }
    commentaire: { type: string, notnull: false }
    budget_id: { type: integer, notnull: true }
  relations:
    Budget: { onUpdate: CASCADE, local: budget_id, foreign: id }
    BudgetCategorie: { onUpdate: CASCADE, local: budget_categorie_id, foreign: id }
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }

BudgetCategorie:
  connection: doctrine
  actAs: { Timestampable: ~, SoftDelete: ~ }
  columns:
    asso_id: { type: integer, notnull: true }
    nom: { type: string(255), notnull: true }
    commentaire: { type: string, notnull: false }
  relations:
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }

Transaction:
  connection: doctrine
  actAs: { Timestampable: ~, SoftDelete: ~ }
  columns:
    asso_id: { type: integer, notnull: true }
    compte_id: { type: integer, notnull: true }
    libelle: { type: string(255), notnull: true }
    montant: { type: decimal(8), scale: 2, notnull: true, default: 0 }
    commentaire: { type: string, notnull: false }
    date_transaction: { type: date, notnull: true }
    date_rapprochement: { type: date, notnull: false }
    budget_poste_id: { type: integer, notnull: false }
    moyen_id: { type: integer, notnull: true }
    moyen_commentaire: { type: string, notnull: false }
    note_de_frais_id: { type: integer }
  relations:
    BudgetPoste: { onUpdate: CASCADE, local: budget_poste_id, foreign: id }
    TransactionMoyen: { onUpdate: CASCADE, local: moyen_id, foreign: id }
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }
    CompteBanquaire: { onUpdate: CASCADE, local: compte_id, foreign: id }

TransactionMoyen:
  connection: doctrine
  columns:
    nom: { type: string(255), notnull: true }
    detail: { type: string(255), notnull: false }

Document:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    asso_id: { type: integer, notnull: true }
    transaction_id: { type: integer }
    nom: { type: string(255), notnull: true }
    fichier: { type: string(255), notnull: true }
    auteur: { type: integer, notnull: true }
    reference: { type: string(255) }
    type_id: { type: integer, notnull: true }
  relations:
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }
    Transaction: { onUpdate: CASCADE, local: transaction_id, foreign: id }
    User: { local: auteur, class: sfGuardUser, foreign: id }
    DocumentType: { local: type_id, foreign: id }

DocumentType:
  connection: doctrine
  columns:
    nom : { type: string(255), notnull: true }
    slug : { type: string(255), notnull: true }
    detail : { type: string, notnull: true }


# DocumentTemplate:
#   connection: doctrine
#   columns:
#     nom: { type: string(255), notnull: true } #on utilise le slug pour retrouver le fichier de template
#     commentaire: { type: string, notnull: true }
#     type_id : { type: integer, notnull: true }
#     champs : { type: string, notnull: true }
#   relations:
#     DocumentType: { local: type_id, foreign: id }

CompteBanquaire:
  connection: doctrine
  actAs: { Timestampable: ~, SoftDelete: ~ }
  columns:
    asso_id: { type: integer, notnull: true }
    nom: { type: string(255), notnull: true }
    banque: { type: string(255), notnull: true }
    num_compte: { type: string(255), notnull: true }
  relations:
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }

NoteDeFrais:
  connection: doctrine
  actAs: { Timestampable: ~, SoftDelete: ~ }
  columns:
    asso_id: { type: integer, notnull: true }
    nom: { type: string(255), notnull: true }
    transaction_id: { type: integer, notnull: true }
  relations:
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }
    Achats:
      type: many
      local: id
      foreign: note_de_frais_id
      class: Transaction
    Transaction: { onUpdate: CASCADE, local: transaction_id, foreign: id }

Subvention:
  connection: doctrine
  actAs: { Timestampable: ~, SoftDelete: ~ }
  columns:
    asso_id: { type: integer, notnull: true }
    nom: { type: string(255), notnull: true }
    montant : { type: decimal(8), scale: 2, notnull: true }
    commentaire : { type: string, notnull: false }
  relations:
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }

AvanceTreso:
  connection: doctrine
  columns:
    emetteur_id: { type: integer, notnull: true }
    asso_id: { type: integer, notnull: true }
    commentaire: { type: string, notnull: true }
    transaction_id: { type: integer, notnull: true }
    transaction_emetteur_id: { type: integer, notnull: true }
  relations:
    Emetteur: { onUpdate: CASCADE, local: emetteur_id, foreign: id, class: Asso }
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }
    Transaction: { onUpdate: CASCADE, local: transaction_id, foreign: id }
    TransactionEmetteur: { onUpdate: CASCADE, local: transaction_emetteur_id, foreign: id, class: Transaction }

Weekmail:
  connection: doctrine
  actAs:  { Timestampable: ~ }
  columns:
    published_at: { type: date }
    edito: { type: string }
    editar: { type: string }

WeekmailArticle:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    asso_id: { type: integer, notnull: true }
    name : { type: string(200), notnull: true }
    text : { type: string, notnull: true }
    image: { type: string }
    summary: { type: string(150) }
    weekmail_id: { type: integer }
    article_id: { type: integer }
  relations:
    Asso: { local: asso_id, foreign: id }
    Weekmail: { local: weekmail_id, foreign: id }
    Article: { local: article_id, foreign: id }

CharteLocaux:
  connection: doctrine
  actAs: { Timestampable: ~ }
  columns:
    date: { type: timestamp, notnull: true }
    ip: { type: string(15), notnull: true }
    semestre_id: { type: integer, notnull: true }
    asso_id : { type: integer, notnull : true }
    login: { type: string(20), notnull: true }
    user_id: { type: integer, notnull: true }
    porte_mde: { type: boolean, notnull: true, default: false }
    bat_a: { type: boolean, notnull: true, default: false }
    locaux_pic: { type: boolean, notnull: true, default: false }
    mde_complete: { type: boolean, notnull: true, default: false }
    locaux_pic: { type: boolean, notnull: true, default: false }
    bureau_polar: { type: boolean, notnull: true, default: false }
    perm_polar: { type: boolean, notnull: true, default: false }
    salles_musique: { type: boolean, notnull: true, default: false }
    statut: {type: int(1), notnull: true}
    motif: {type: string}
  relations:
    Semestre: { onUpdate: CASCADE, local: semestre_id, foreign: id }
    Asso: { onUpdate: CASCADE, local: asso_id, foreign: id }
    Responsable: { onUpdate: CASCADE, local: user_id, foreign: id, class: sfGuardUser }
    
InfoJobCategorie:
  connection: doctrine
  columns:
    name: { type: string(100), notnull: true }
    
InfoJobDisponibilite:
  connection: doctrine
  columns:
    name: { type: string(100), notnull: true }

InfoJobOffre:
  actAs: { Timestampable: ~ }
  connection: doctrine
  columns:
    categorie_id: { type: integer, notnull: true }
    user_id: { type: integer }
    titre: { type: string(250), notnull: true }
    texte: { type: string, notnull: true }
    lieu: { type: string(250) }
    remuneration: { type: string(250), notnull: true }
    email: { type: string(100) }
    telephone: { type: string(20) }
    validation_date : { type: datetime }
    expiration_date : { type: datetime }
    archivage_date: { type: datetime }
    emailkey: { type: string(32), notnull: true }
    validationkey: { type: string(32), notnull: true }
  relations:
    Categorie: { onUpdate: CASCADE, local: categorie_id, foreign: id, class: InfoJobCategorie }
    User: { onUpdate: CASCADE, local: user_id, foreign: id, class: sfGuardUser }
    Disponibilites:
      class: InfoJobDisponibilite
      onDelete: CASCADE
      refClass: InfoJobOffreDisponibilite
      local: offre_id
      foreign: disponibilite_id

InfoJobOffreDisponibilite:
  connection: doctrine
  columns:
    offre_id: { type: integer, primary: true }
    disponibilite_id: { type: integer, primary: true }
  relations:
    Offre: { onUpdate: CASCADE, local: offre_id, foreign: id, class: InfoJobOffre, foreignAlias: OffreDisponibilites }
    Disponibilite: { onUpdate: CASCADE, local: disponibilite_id, foreign: id, class: InfoJobDispobilite, foreignAlias: OffreDisponibilites }
  
    
InfoJobSignalement:
  actAs: { Timestampable: ~ }
  connection: doctrine
  columns:
    offre_id: { type: integer, notnull: true }
    type_id: { type: integer, notnull: true }
    commentaire: { type: string(255) }
    archivage_date: { type: datetime }
  relations:
    Offre: { onUpdate: CASCADE, local: offre_id, foreign: id, class: InfoJobOffre }
    Type: { onUpdate: CASCADE, local: type_id, foreign: id, class: InfoJobSignalementType }
    
InfoJobSignalementType:
  connection: doctrine
  columns:
    name: { type: string(100), notnull: true }
   
InfoJobAbonnementCategorie:
  connection: doctrine
  columns:
    categorie_id : { type: integer, notnull: true }
    user_id: { type: integer, notnull: true }
  relations:
    Categorie: { onUpdate: CASCADE, local: categorie_id, foreign: id, class: InfoJobCategorie }
    User: { onUpdate: CASCADE, local: user_id, foreign: id, class: sfGuardUser }
      
       
InfoJobAbonnementDisponibilite:
  connection: doctrine
  columns:
    disponibilite_id : { type: integer, notnull: true }
    user_id: { type: integer, notnull: true }
  relations:
    Categorie: { onUpdate: CASCADE, local: disponibilite_id, foreign: id, class: InfoJobDispobilite }
    User: { onUpdate: CASCADE, local: user_id, foreign: id, class: sfGuardUser }

