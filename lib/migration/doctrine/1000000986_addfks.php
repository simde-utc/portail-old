<?php
/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class Addfks extends Doctrine_Migration_Base
{
    public function up()
    {
        $this->createForeignKey('activation', 'activation_user_id_sf_guard_user_id', array(
             'name' => 'activation_user_id_sf_guard_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => 'CASCADE',
             'onDelete' => NULL,
             ));
        $this->createForeignKey('annonce', 'annonce_categorie_id_annonces_categorie_id', array(
             'name' => 'annonce_categorie_id_annonces_categorie_id',
             'local' => 'categorie_id',
             'foreign' => 'id',
             'foreignTable' => 'annonces_categorie',
             'onUpdate' => 'CASCADE',
             'onDelete' => NULL,
             ));
        $this->createForeignKey('annonce', 'annonce_user_id_sf_guard_user_id', array(
             'name' => 'annonce_user_id_sf_guard_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => 'CASCADE',
             'onDelete' => NULL,
             ));
        $this->createForeignKey('article', 'article_asso_id_asso_id', array(
             'name' => 'article_asso_id_asso_id',
             'local' => 'asso_id',
             'foreign' => 'id',
             'foreignTable' => 'asso',
             ));
        $this->createForeignKey('asso', 'asso_pole_id_pole_id', array(
             'name' => 'asso_pole_id_pole_id',
             'local' => 'pole_id',
             'foreign' => 'id',
             'foreignTable' => 'pole',
             ));
        $this->createForeignKey('asso', 'asso_type_id_type_asso_id', array(
             'name' => 'asso_type_id_type_asso_id',
             'local' => 'type_id',
             'foreign' => 'id',
             'foreignTable' => 'type_asso',
             ));
        $this->createForeignKey('asso_member', 'asso_member_asso_id_asso_id', array(
             'name' => 'asso_member_asso_id_asso_id',
             'local' => 'asso_id',
             'foreign' => 'id',
             'foreignTable' => 'asso',
             ));
        $this->createForeignKey('asso_member', 'asso_member_role_id_role_id', array(
             'name' => 'asso_member_role_id_role_id',
             'local' => 'role_id',
             'foreign' => 'id',
             'foreignTable' => 'role',
             ));
        $this->createForeignKey('asso_member', 'asso_member_user_id_sf_guard_user_id', array(
             'name' => 'asso_member_user_id_sf_guard_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             ));
        $this->createForeignKey('asso_member', 'asso_member_semestre_id_semestre_id', array(
             'name' => 'asso_member_semestre_id_semestre_id',
             'local' => 'semestre_id',
             'foreign' => 'id',
             'foreignTable' => 'semestre',
             ));
        $this->createForeignKey('charte_info', 'charte_info_semestre_id_semestre_id', array(
             'name' => 'charte_info_semestre_id_semestre_id',
             'local' => 'semestre_id',
             'foreign' => 'id',
             'foreignTable' => 'semestre',
             'onUpdate' => 'CASCADE',
             'onDelete' => NULL,
             ));
        $this->createForeignKey('charte_info', 'charte_info_asso_id_asso_id', array(
             'name' => 'charte_info_asso_id_asso_id',
             'local' => 'asso_id',
             'foreign' => 'id',
             'foreignTable' => 'asso',
             'onUpdate' => 'CASCADE',
             'onDelete' => NULL,
             ));
        $this->createForeignKey('charte_info', 'charte_info_responsable_id_sf_guard_user_id', array(
             'name' => 'charte_info_responsable_id_sf_guard_user_id',
             'local' => 'responsable_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => 'CASCADE',
             'onDelete' => NULL,
             ));
        $this->createForeignKey('emprunt', 'emprunt_materiel_id_materiel_id', array(
             'name' => 'emprunt_materiel_id_materiel_id',
             'local' => 'materiel_id',
             'foreign' => 'id',
             'foreignTable' => 'materiel',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('emprunt', 'emprunt_user_id_sf_guard_user_id', array(
             'name' => 'emprunt_user_id_sf_guard_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('emprunt', 'emprunt_asso_id_asso_id', array(
             'name' => 'emprunt_asso_id_asso_id',
             'local' => 'asso_id',
             'foreign' => 'id',
             'foreignTable' => 'asso',
             'onUpdate' => 'CASCADE',
             'onDelete' => NULL,
             ));
        $this->createForeignKey('event', 'event_asso_id_asso_id', array(
             'name' => 'event_asso_id_asso_id',
             'local' => 'asso_id',
             'foreign' => 'id',
             'foreignTable' => 'asso',
             ));
        $this->createForeignKey('event', 'event_type_id_event_type_id', array(
             'name' => 'event_type_id_event_type_id',
             'local' => 'type_id',
             'foreign' => 'id',
             'foreignTable' => 'event_type',
             ));
        $this->createForeignKey('materiel', 'materiel_asso_id_asso_id', array(
             'name' => 'materiel_asso_id_asso_id',
             'local' => 'asso_id',
             'foreign' => 'id',
             'foreignTable' => 'asso',
             'onUpdate' => 'CASCADE',
             'onDelete' => NULL,
             ));
        $this->createForeignKey('pole', 'pole_asso_id_asso_id', array(
             'name' => 'pole_asso_id_asso_id',
             'local' => 'asso_id',
             'foreign' => 'id',
             'foreignTable' => 'asso',
             ));
        $this->createForeignKey('profile', 'profile_user_id_sf_guard_user_id', array(
             'name' => 'profile_user_id_sf_guard_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             ));
        $this->createForeignKey('profile', 'profile_home_place_place_id', array(
             'name' => 'profile_home_place_place_id',
             'local' => 'home_place',
             'foreign' => 'id',
             'foreignTable' => 'place',
             ));
        $this->createForeignKey('profile', 'profile_family_place_place_id', array(
             'name' => 'profile_family_place_place_id',
             'local' => 'family_place',
             'foreign' => 'id',
             'foreignTable' => 'place',
             ));
        $this->createForeignKey('profile', 'profile_branche_id_branche_id', array(
             'name' => 'profile_branche_id_branche_id',
             'local' => 'branche_id',
             'foreign' => 'id',
             'foreignTable' => 'branche',
             ));
        $this->createForeignKey('profile', 'profile_filiere_id_filiere_id', array(
             'name' => 'profile_filiere_id_filiere_id',
             'local' => 'filiere_id',
             'foreign' => 'id',
             'foreignTable' => 'filiere',
             ));
        $this->createForeignKey('stock', 'stock_materiel_id_materiel_id', array(
             'name' => 'stock_materiel_id_materiel_id',
             'local' => 'materiel_id',
             'foreign' => 'id',
             'foreignTable' => 'materiel',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('stock', 'stock_etat_id_etat_id', array(
             'name' => 'stock_etat_id_etat_id',
             'local' => 'etat_id',
             'foreign' => 'id',
             'foreignTable' => 'etat',
             'onUpdate' => 'CASCADE',
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('sf_guard_forgot_password', 'sf_guard_forgot_password_user_id_sf_guard_user_id', array(
             'name' => 'sf_guard_forgot_password_user_id_sf_guard_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_group_id_sf_guard_group_id', array(
             'name' => 'sf_guard_group_permission_group_id_sf_guard_group_id',
             'local' => 'group_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_group',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_permission_id_sf_guard_permission_id', array(
             'name' => 'sf_guard_group_permission_permission_id_sf_guard_permission_id',
             'local' => 'permission_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_permission',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('sf_guard_remember_key', 'sf_guard_remember_key_user_id_sf_guard_user_id', array(
             'name' => 'sf_guard_remember_key_user_id_sf_guard_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('sf_guard_user_group', 'sf_guard_user_group_user_id_sf_guard_user_id', array(
             'name' => 'sf_guard_user_group_user_id_sf_guard_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('sf_guard_user_group', 'sf_guard_user_group_group_id_sf_guard_group_id', array(
             'name' => 'sf_guard_user_group_group_id_sf_guard_group_id',
             'local' => 'group_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_group',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_user_id_sf_guard_user_id', array(
             'name' => 'sf_guard_user_permission_user_id_sf_guard_user_id',
             'local' => 'user_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_user',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             ));
        $this->createForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_permission_id_sf_guard_permission_id', array(
             'name' => 'sf_guard_user_permission_permission_id_sf_guard_permission_id',
             'local' => 'permission_id',
             'foreign' => 'id',
             'foreignTable' => 'sf_guard_permission',
             'onUpdate' => NULL,
             'onDelete' => 'CASCADE',
             ));
    }

    public function down()
    {
        $this->dropForeignKey('activation', 'activation_user_id_sf_guard_user_id');
        $this->dropForeignKey('annonce', 'annonce_categorie_id_annonces_categorie_id');
        $this->dropForeignKey('annonce', 'annonce_user_id_sf_guard_user_id');
        $this->dropForeignKey('article', 'article_asso_id_asso_id');
        $this->dropForeignKey('asso', 'asso_pole_id_pole_id');
        $this->dropForeignKey('asso', 'asso_type_id_type_asso_id');
        $this->dropForeignKey('asso_member', 'asso_member_asso_id_asso_id');
        $this->dropForeignKey('asso_member', 'asso_member_role_id_role_id');
        $this->dropForeignKey('asso_member', 'asso_member_user_id_sf_guard_user_id');
        $this->dropForeignKey('asso_member', 'asso_member_semestre_id_semestre_id');
        $this->dropForeignKey('charte_info', 'charte_info_semestre_id_semestre_id');
        $this->dropForeignKey('charte_info', 'charte_info_asso_id_asso_id');
        $this->dropForeignKey('charte_info', 'charte_info_responsable_id_sf_guard_user_id');
        $this->dropForeignKey('emprunt', 'emprunt_materiel_id_materiel_id');
        $this->dropForeignKey('emprunt', 'emprunt_user_id_sf_guard_user_id');
        $this->dropForeignKey('emprunt', 'emprunt_asso_id_asso_id');
        $this->dropForeignKey('event', 'event_asso_id_asso_id');
        $this->dropForeignKey('event', 'event_type_id_event_type_id');
        $this->dropForeignKey('materiel', 'materiel_asso_id_asso_id');
        $this->dropForeignKey('pole', 'pole_asso_id_asso_id');
        $this->dropForeignKey('profile', 'profile_user_id_sf_guard_user_id');
        $this->dropForeignKey('profile', 'profile_home_place_place_id');
        $this->dropForeignKey('profile', 'profile_family_place_place_id');
        $this->dropForeignKey('profile', 'profile_branche_id_branche_id');
        $this->dropForeignKey('profile', 'profile_filiere_id_filiere_id');
        $this->dropForeignKey('stock', 'stock_materiel_id_materiel_id');
        $this->dropForeignKey('stock', 'stock_etat_id_etat_id');
        $this->dropForeignKey('sf_guard_forgot_password', 'sf_guard_forgot_password_user_id_sf_guard_user_id');
        $this->dropForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_group_id_sf_guard_group_id');
        $this->dropForeignKey('sf_guard_group_permission', 'sf_guard_group_permission_permission_id_sf_guard_permission_id');
        $this->dropForeignKey('sf_guard_remember_key', 'sf_guard_remember_key_user_id_sf_guard_user_id');
        $this->dropForeignKey('sf_guard_user_group', 'sf_guard_user_group_user_id_sf_guard_user_id');
        $this->dropForeignKey('sf_guard_user_group', 'sf_guard_user_group_group_id_sf_guard_group_id');
        $this->dropForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_user_id_sf_guard_user_id');
        $this->dropForeignKey('sf_guard_user_permission', 'sf_guard_user_permission_permission_id_sf_guard_permission_id');
    }
}